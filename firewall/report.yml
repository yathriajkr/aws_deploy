---
# report.yml - Checks to see if a firewall is ready via 'show chassis-ready' command.
#
# Description
# ===========
#
# Uses the 'show chassis-ready' op command to see if a PAN-OS firewall is ready.  This playbook uses the Ansible
# 'until' and 'retries' keywords to retry the command until successful.
#
# This playbook requires connection details for the device to be specified in the variables 'ip_address', 'username',
# and 'password'.  These may be defined as host variables (see `host_vars/firewall.yml` for an example) or
# extra vars.
#
# Modules Used
# ============
#
# panos_op - https://paloaltonetworks.github.io/pan-os-ansible/modules/panos_op.html
#
# Usage
# =====
#
#   $ ansible-playbook -i inventory check_ready.yml

- hosts: gcp-fw
  connection: local

  tasks:
    # - name: Check to see if device is ready
    #   paloaltonetworks.panos.panos_op:
    #     provider: '{{ provider }}'
    #     cmd: 'show chassis-ready'
    #   changed_when: false
    #   register: result
    #   until: result is not failed and (result.stdout | from_json).response.result == 'yes'
    #   retries: 50
    #   delay: 30

    # - name: Get facts
    #   paloaltonetworks.panos.panos_facts:
    #     provider: '{{ provider }}'
    #     gather_subset: ['all']
    #   register: complete_facts

    # - name: Print Facts
    #   debug:
    #     msg: "{{ complete_facts }}"
            
    
    # - name: Get the system info
    #   paloaltonetworks.panos.panos_op:
    #     provider: "{{ provider }}"
    #     cmd: "show system info"
    #   register: res

    # - name: Get the system CPU info
    #   paloaltonetworks.panos.panos_op:
    #     provider: "{{ provider }}"
    #     cmd: "show system resources"
    #   register: res

    # - debug:
    #     msg: "{{ res.stdout }}"

    - name: Filter the value
      set_fact: 
        device_static_route_config: "{{ standard_static_route_config | filter_static(device_static_route_config) }}"
        
    - name: validate the static route data against standards
      set_fact:
        missing_routes: "{{ standard_static_route_config | validate_static(device_static_route_config) }}"

    - name: 
      debug:
        msg: "{{ data }}" 
        
    # - name: 
    # - name: Create Address objects
    #   paloaltonetworks.panos.panos_address_object:
    #     provider: '{{ provider }}'
    #     name: '{{ address_item.name }}'
    #     value: '{{ address_item.value }}'
    #   loop: '{{ panos_address_object }}'
    #   loop_control:
    #     loop_var: address_item
    #   register: 
